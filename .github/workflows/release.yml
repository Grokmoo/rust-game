on:
  push:
    tags:
      - '*'

name: Create Release Builds

jobs:
  build:
    name: Create Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Linux Build
        run: |
          cargo install cross
          cross build --target x86_64-unknown-linux-gnu
          mkdir sulis/
          cp target/x86_64-unknown-linux-gnu/release/main sulis/sulis
          git archive HEAD --prefix=sulis/ --format=zip -o sulis-${{ steps.get_version.outputs.VERSION }}-linux64.zip
          zip -u sulis-${{ steps.get_version.outputs.VERSION }}-linux64.zip sulis/sulis
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sulis-${{ steps.get_version.outputs.VERSION }}-linux64.zip
          asset_name: sulis-${{ steps.get_version.outputs.VERSION }}-linux64.zip
          asset_content_type: application/zip
